# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Full Stack Web CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

jobs:
  frontend:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-front

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'react-front/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - name: Archive front production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          react-front/dist

  backend:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node-back

    strategy:
      matrix:
        node-version: [21.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'node-back/package-lock.json'
    - run: npm ci
    - name: Archive back packages
      uses: actions/upload-artifact@v4
      with:
        name: node_modules
        path: |
          node-back/node_modules

  docker-front:
  
    needs: ["frontend", "backend"]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-front

    steps:
    - uses: actions/checkout@v3
    - name: Download front production build
      uses: actions/download-artifact@v4
      with:
        name: dist
    - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/hitema-ci-cd-front:latest
    - name: Push the image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/hitema-ci-cd-front:latest

  docker-back:
  
    needs: ["frontend", "backend"]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node-back

    steps:
    - uses: actions/checkout@v3
    - name: Download back node_modules
      uses: actions/download-artifact@v4
      with:
        name: node_modules
    - run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/hitema-ci-cd-back:latest
    - name: Push the image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/hitema-ci-cd-back:latest
